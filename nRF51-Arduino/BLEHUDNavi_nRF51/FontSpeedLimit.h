#ifndef FONTSPEEDLIMIT_H_INCLUDED
#define FONTSPEEDLIMIT_H_INCLUDED

// Created with Adafruit GFX Font Customiser
// https://tchapi.github.io/Adafruit-GFX-Font-Customiser/

const uint8_t FontSpeedLimitBitmaps[] PROGMEM = {
  0x07, 0xC0, 0x3F, 0xE0, 0xFF, 0xE1, 0xFF, 0xC7, 0xC7, 0xCF, 0x07, 0xBE, 
  0x0F, 0xF8, 0x0F, 0xF0, 0x1F, 0xE0, 0x3F, 0xC0, 0x7F, 0x80, 0xFF, 0x01, 
  0xFE, 0x03, 0xFC, 0x07, 0xF8, 0x0F, 0xF0, 0x1F, 0xE0, 0x3F, 0xE0, 0xFB, 
  0xC1, 0xE7, 0xC7, 0xC7, 0xFF, 0x0F, 0xFE, 0x0F, 0xF8, 0x07, 0xC0, 0x00, 
  0x07, 0x07, 0x0F, 0x1F, 0x3F, 0xFF, 0xFF, 0xFF, 0x0F, 0x0F, 0x0F, 0x0F, 
  0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 
  0x0F, 0x07, 0xC0, 0x3F, 0xE0, 0xFF, 0xE3, 0xFF, 0xE7, 0xC7, 0xDF, 0x07, 
  0xFC, 0x07, 0xF8, 0x0F, 0xF0, 0x1E, 0x00, 0x3C, 0x00, 0xF8, 0x03, 0xE0, 
  0x0F, 0xC0, 0x3F, 0x00, 0xFC, 0x03, 0xF0, 0x0F, 0xC0, 0x3F, 0x00, 0xFC, 
  0x03, 0xF0, 0x07, 0xC0, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 
  0x00, 0x0F, 0xC0, 0x7F, 0xE1, 0xFF, 0xE3, 0xFF, 0xCF, 0x87, 0xDE, 0x07, 
  0xBC, 0x0F, 0x78, 0x1E, 0x00, 0x3C, 0x00, 0xF8, 0x03, 0xE0, 0x1F, 0xC0, 
  0x3F, 0x00, 0x7F, 0x00, 0x1F, 0x00, 0x1F, 0x00, 0x1F, 0xE0, 0x3F, 0xC0, 
  0x7F, 0x81, 0xF7, 0x87, 0xCF, 0xFF, 0x8F, 0xFE, 0x0F, 0xF8, 0x0F, 0xC0, 
  0x00, 0x00, 0xF8, 0x00, 0xF8, 0x01, 0xF8, 0x01, 0xF8, 0x03, 0xF8, 0x03, 
  0x78, 0x07, 0x78, 0x06, 0x78, 0x0E, 0x78, 0x0C, 0x78, 0x18, 0x78, 0x38, 
  0x78, 0x30, 0x78, 0x70, 0x78, 0x60, 0x78, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x00, 0x78, 0x00, 0x78, 0x00, 0x78, 0x00, 0x78, 0x00, 
  0x78, 0x00, 0x78, 0x3F, 0xFE, 0x3F, 0xFE, 0x3F, 0xFE, 0x7F, 0xFE, 0x78, 
  0x00, 0x78, 0x00, 0x70, 0x00, 0x70, 0x00, 0x77, 0xE0, 0xFF, 0xF8, 0xFF, 
  0xFC, 0xFF, 0xFE, 0xF0, 0x3E, 0x00, 0x1F, 0x00, 0x0F, 0x00, 0x0F, 0x00, 
  0x0F, 0x00, 0x0F, 0xF0, 0x0F, 0xF0, 0x1F, 0xF8, 0x3E, 0x7F, 0xFE, 0x7F, 
  0xFC, 0x1F, 0xF8, 0x07, 0xE0, 0x03, 0xE0, 0x0F, 0xF8, 0x1F, 0xFC, 0x3F, 
  0xFE, 0x3C, 0x3E, 0x78, 0x1E, 0x78, 0x00, 0xF0, 0x00, 0xF1, 0xF0, 0xF7, 
  0xF8, 0xFF, 0xFC, 0xFF, 0xFE, 0xFC, 0x3E, 0xF8, 0x1F, 0xF0, 0x0F, 0xF0, 
  0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0x70, 0x0F, 0x78, 0x1F, 0x7C, 0x3E, 0x3F, 
  0xFE, 0x1F, 0xFC, 0x0F, 0xF8, 0x07, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xF0, 0x00, 0xF0, 0x00, 0xF8, 0x00, 0xF8, 0x00, 0x78, 
  0x00, 0x7C, 0x00, 0x3C, 0x00, 0x3E, 0x00, 0x1E, 0x00, 0x1F, 0x00, 0x0F, 
  0x00, 0x0F, 0x80, 0x07, 0xC0, 0x03, 0xC0, 0x03, 0xE0, 0x01, 0xF0, 0x00, 
  0xF8, 0x00, 0x78, 0x00, 0x7C, 0x00, 0x3E, 0x00, 0x1F, 0x00, 0x0F, 0x80, 
  0x00, 0x03, 0xC0, 0x0F, 0xF0, 0x1F, 0xF8, 0x3F, 0xFC, 0x7C, 0x3E, 0x78, 
  0x1E, 0x78, 0x1E, 0x78, 0x1E, 0x78, 0x1E, 0x3C, 0x3C, 0x1F, 0xF8, 0x0F, 
  0xF0, 0x3F, 0xFC, 0x7C, 0x3E, 0x78, 0x1E, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 
  0x0F, 0xF0, 0x0F, 0xF8, 0x1F, 0x7C, 0x3E, 0x7F, 0xFE, 0x3F, 0xFC, 0x1F, 
  0xF8, 0x07, 0xE0, 0x07, 0xC0, 0x1F, 0xF0, 0x3F, 0xF8, 0x7F, 0xFC, 0x7C, 
  0x3C, 0xF8, 0x1E, 0xF0, 0x0E, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 
  0x0F, 0xF8, 0x1F, 0x7C, 0x3F, 0x7F, 0xFF, 0x3F, 0xFF, 0x1F, 0xEF, 0x0F, 
  0x8F, 0x00, 0x0F, 0x00, 0x1E, 0x78, 0x1E, 0x7C, 0x3E, 0x7F, 0xFC, 0x3F, 
  0xF8, 0x1F, 0xF0, 0x07, 0xC0
};

const GFXglyph FontSpeedLimitGlyphs[] PROGMEM = {
  {     0,  15,  25,  17,    1,  -24 },   // 0x30 '0'
  {    48,   8,  25,  12,    1,  -24 },   // 0x31 '1'
  {    73,  15,  25,  17,    1,  -24 },   // 0x32 '2'
  {   121,  15,  25,  17,    1,  -24 },   // 0x33 '3'
  {   169,  16,  25,  17,    0,  -24 },   // 0x34 '4'
  {   219,  16,  25,  18,    1,  -24 },   // 0x35 '5'
  {   269,  16,  25,  18,    1,  -24 },   // 0x36 '6'
  {   319,  17,  25,  19,    1,  -24 },   // 0x37 '7'
  {   373,  16,  25,  18,    1,  -24 },   // 0x38 '8'
  {   423,  16,  25,  18,    1,  -24 }    // 0x39 '9'
};

const GFXfont FontSpeedLimit PROGMEM = {
    (uint8_t *)FontSpeedLimitBitmaps,    
    (GFXglyph *)FontSpeedLimitGlyphs, 0x30, 0x39,    
    32
};

#endif // FONTSPEEDLIMIT_H_INCLUDED
